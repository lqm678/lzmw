Run-Command144[1] = type sample-file.txt | lzmw -c -A  -b No-Such-Block-Begin -Q No-Such-Block-End  Should return 0

Run-Command144[2] = type sample-file.txt | lzmw -c -A  -b No-Such-Block-Begin -Q No-Such-Block-End -l Should return 0

Run-Command144[3] = type sample-file.txt | lzmw -c -A  -b No-Such-Begin -q No-Such-End Should return 0

Run-Command144[4] = type sample-file.txt | lzmw -c -A  -b No-Such-Begin -q No-Such-End -l Should return 0

Run-Command144[5] = type sample-file.txt | lzmw -c -A  -S -t "^(.+\S+)\s*$" -H 0         # Check return value, output nothing

Run-Command144[6] = type sample-file.txt | lzmw -c -A  -S -t "^(.+\S+)$" -H 0            # Check return value, output nothing

Run-Command144[7] = type sample-file.txt | lzmw -c -A  -S -t "^(.+\S+)\n$" -H 0          # Check return value, output nothing

Run-Command144[8] = type sample-file.txt | lzmw -c -A  -L 7 -N 9 -t Not -U 2 -D 2
:7: enum class LineType {
:8:     NotMatchedLine = 0,
:9:     MatchedLine = 1,

Run-Command144[9] = type sample-file.txt | lzmw -c -A  -it node --nt "node\d+"
:48:   <as::item ref="NodeCitOnly" />
:62:   <as::item ref="NodeCitOnly" />
:67:   <Subject>Node 2 title in body for test</Subject>
:75:   <as::item ref="NodeCitOnly" />

Run-Command144[10] = type sample-file.txt | lzmw -c -A  -it node --nt "node\d+" -o "NODE"
:48:   <as::item ref="NODECitOnly" />
:62:   <as::item ref="NODECitOnly" />
:67:   <Subject>NODE 2 title in body for test</Subject>
:75:   <as::item ref="NODECitOnly" />

Run-Command144[11] = type sample-file.txt | lzmw -c -A  -b "^\s*<Tag" -Q "^\s*</Tag" -t "Node[13]" -a -L 20 -N 50 ## Must no blocks

Run-Command144[12] = type sample-file.txt | lzmw -c -A  -b "^\s*<Tag" -Q "^\s*</Tag" -t "Node[13]" -a -L 20 -N 80 ## Must have only 1 block
:47: <Tag Name="Node1">
:48:   <as::item ref="NodeCitOnly" />
:49:   <as::item ref="Node1Config" />
:50:   <MailTo>Alex@abc.com</MailTo>
:51:   <as::item ref="Node1Body">
:52:     <as::pairs>
:53:       <as::pair name="MailTo">Bob@abc.com</as::pair>
:54:       <as::pair name="Function">#FUNCTION#</as::pair>
:55:       <as::pair name="Interval">#THRESHOLD_1#</as::pair>
:56:       <as::pair name="Switch">#THRESHOLD_2#</as::pair>
:57:     </as::pairs>
:58:   </as::item>
:59: </Tag>

Run-Command144[13] = type sample-file.txt | lzmw -c -A  -b "^\s*<Tag" -Q "^\s*</Tag" -t "Node[13]" -a  ## Must have and only 2 blocks: Node1 and Node3
:47: <Tag Name="Node1">
:48:   <as::item ref="NodeCitOnly" />
:49:   <as::item ref="Node1Config" />
:50:   <MailTo>Alex@abc.com</MailTo>
:51:   <as::item ref="Node1Body">
:52:     <as::pairs>
:53:       <as::pair name="MailTo">Bob@abc.com</as::pair>
:54:       <as::pair name="Function">#FUNCTION#</as::pair>
:55:       <as::pair name="Interval">#THRESHOLD_1#</as::pair>
:56:       <as::pair name="Switch">#THRESHOLD_2#</as::pair>
:57:     </as::pairs>
:58:   </as::item>
:59: </Tag>
:74: <Tag Name="Node3">
:75:   <as::item ref="NodeCitOnly" />
:76:   <as::item ref="Node3Config" />
:77: 
:78:   <MailTo>Clark@abc.com</MailTo>
:79:   <AllowReTry>true</AllowReTry>
:80:   <SubArgs>
:81:     <SubArg>HBase</SubArg>
:82:   </SubArgs>
:83:   <Subject>Node3 title in body for test</Subject>
:84:   <Hosts>
:85:     <HBrgetHost>LZHOST</HBrgetHost>
:86:   </Hosts>
:87: </Tag>

Run-Command144[14] = type sample-file.txt | lzmw -c -A  -b "^\s*<Tag" -Q "^\s*</Tag" -t "Node[1-3]" -x Node2 -a ## Must have only Node2 block
:61: <Tag Name="Node2">
:62:   <as::item ref="NodeCitOnly" />
:63:   <as::item ref="Node2Config" />
:64: 
:65:   <MailTo>Bob@abc.com</MailTo>
:66:   <SubArgs />
:67:   <Subject>Node 2 title in body for test</Subject>
:68:   <Hosts>
:69:     <HBrgetHost>HB</HBrgetHost>
:70:     <Type>BBB</Type>
:71:   </Hosts>
:72: </Tag>

Run-Command144[15] = type sample-file.txt | lzmw -c -A  -ib "^\s*<tag" -Q "^\s*</tag" --nt "Node[1-3]" -e "Node\d+"  ## Must no block to output

Run-Command144[16] = type sample-file.txt | lzmw -c -A  -b "^\s*<tag" -iQ "^\s*</tag" --nt "Node[1-3]"  ## Must no block to output

Run-Command144[17] = type sample-file.txt | lzmw -c -A  -b "^\s*<tag" -Q "^\s*</tag" -i --nt "Node[1-3]" -a  ## Must no block to output

Run-Command144[18] = type sample-file.txt | lzmw -c -A  -b "^\s*<tag" -Q "^\s*</tag" -i --nt "Node[13]" -t "Node\d+"  ## Must have only Node2 but not whole block
:61: <Tag Name="Node2">
:63:   <as::item ref="Node2Config" />

Run-Command144[19] = type sample-file.txt | lzmw -c -A  -b "^\s*<tag" -Q "^\s*</tag" -i --nt "Node[13]" -e "Node\d+"  ## Must have only Node2 and whole block
:61: <Tag Name="Node2">
:62:   <as::item ref="NodeCitOnly" />
:63:   <as::item ref="Node2Config" />
:64: 
:65:   <MailTo>Bob@abc.com</MailTo>
:66:   <SubArgs />
:67:   <Subject>Node 2 title in body for test</Subject>
:68:   <Hosts>
:69:     <HBrgetHost>HB</HBrgetHost>
:70:     <Type>BBB</Type>
:71:   </Hosts>
:72: </Tag>

Run-Command144[20] = type sample-file.txt | lzmw -c -A  -b "^\s*<tag" -Q "^\s*</tag" -i --nt "Node[13]" -a -e "Node\d+" ## Must have only Node2 and whole block
:61: <Tag Name="Node2">
:62:   <as::item ref="NodeCitOnly" />
:63:   <as::item ref="Node2Config" />
:64: 
:65:   <MailTo>Bob@abc.com</MailTo>
:66:   <SubArgs />
:67:   <Subject>Node 2 title in body for test</Subject>
:68:   <Hosts>
:69:     <HBrgetHost>HB</HBrgetHost>
:70:     <Type>BBB</Type>
:71:   </Hosts>
:72: </Tag>

Run-Command144[21] = type sample-file.txt | lzmw -c -A  -b "^\s*<tag" -Q "^\s*</tag" -i --nt "Node[13]" -a -t "Node2"  ## Must have only Node2 and whole block
:61: <Tag Name="Node2">
:62:   <as::item ref="NodeCitOnly" />
:63:   <as::item ref="Node2Config" />
:64: 
:65:   <MailTo>Bob@abc.com</MailTo>
:66:   <SubArgs />
:67:   <Subject>Node 2 title in body for test</Subject>
:68:   <Hosts>
:69:     <HBrgetHost>HB</HBrgetHost>
:70:     <Type>BBB</Type>
:71:   </Hosts>
:72: </Tag>

Run-Command144[22] = type sample-file.txt | lzmw -c -A  -b "^\s*<Tag" -Q "^\s*</Tag" -t "Node[13]" --nx node3 -ai -x Node -o myNode  ## Must have only block Node1 and replaced
:47: <Tag Name="myNode1">
:48:   <as::item ref="NodeCitOnly" />
:49:   <as::item ref="myNode1Config" />
:50:   <MailTo>Alex@abc.com</MailTo>
:51:   <as::item ref="myNode1Body">
:52:     <as::pairs>
:53:       <as::pair name="MailTo">Bob@abc.com</as::pair>
:54:       <as::pair name="Function">#FUNCTION#</as::pair>
:55:       <as::pair name="Interval">#THRESHOLD_1#</as::pair>
:56:       <as::pair name="Switch">#THRESHOLD_2#</as::pair>
:57:     </as::pairs>
:58:   </as::item>
:59: </Tag>

Run-Command144[23] = type sample-file.txt | lzmw -c -A  -b "^\s*<Tag" -Q "^\s*</TagNotExist>" -a ## Should no blocks and output.

Run-Command144[24] = type sample-file.txt | lzmw -c -A  -ib "^\s*enum" -q "\};" -S -t "([\r\n]+)\s+" -o "$1  "  ## Single line regex matching
:12: enum class LineType {
  NotMatchedLine = 0,
  MatchedLine = 1,
  UpLine = 2,
  DownLine = 3
};

Run-Command144[25] = type sample-file.txt | lzmw -c -A  -ib "^\s*enum" -q "\};" -t "^\s+" -o "  " -a -P
enum class LineType {
  NotMatchedLine = 0,
  MatchedLine = 1,
  UpLine = 2,
  DownLine = 3
};

Run-Command144[26] = type sample-file.txt | lzmw -c -A  -i -t "(Deferred\w*)"
:14: class DeferredRun {
:16:         DeferredRun(const std::function<void()>& run) : _run(run) { }
:17:         ~DeferredRun() {
:28:         DeferredRun deferredRun([&]() {

Run-Command144[27] = type sample-file.txt | lzmw -c -A  -it "(Deferred\w*)\s+\1"
:28:         DeferredRun deferredRun([&]() {

Run-Command144[28] = type sample-file.txt | lzmw -c -A  -i -b "class DeferredRun" -Q "^};" -t "(Deferred\w*)" -o "$1Replaced"
:14: class DeferredRunReplaced {
:16:         DeferredRunReplaced(const std::function<void()>& run) : _run(run) { }
:17:         ~DeferredRunReplaced() {

Run-Command144[29] = type example-commands.bat | lzmw -c -A  -it "class|run" -H 9
:1: ::Just run windows-test.bat which calls this file, or run this file directly, you will get a vivid sense of lzmw.
:48: lzmw -c -p %~dp0\sample-file.txt -i -b "class DeferredRun" -Q "^};" -t "(Deferred\w*)" -o "$1Replaced"
:49: lzmw -c -p %~dp0\example-commands.bat -it "class|run" -H 9
:50: lzmw -c -p %~dp0\example-commands.bat -ie "class|run" -H 9

Run-Command144[30] = type example-commands.bat | lzmw -c -A  -ie "class|run" -H 9
:1: ::Just run windows-test.bat which calls this file, or run this file directly, you will get a vivid sense of lzmw.
:2: lzmw -c -z "c:\Program Files\LLVM\bin\clang.exe" -x \ -o \\
:3: lzmw -c -z "c:\Program Files\LLVM\bin\clang.exe" -t \\ -o \\
:4: lzmw -c -z "c:\Program Files\LLVM\bin\clang.exe" -t "\\\\" -o \\
:5: lzmw -c -z www.lz.text/temp.normal/samples/my.normal/my-stream.xml -x normal/ -t "(www.*)/([^/]+\.xml)\s*"
:6: 
:7: lzmw -c -p %~dp0\sample-file.txt -b No-Such-Block-Begin -Q No-Such-Block-End  Should return 0
:8: lzmw -c -p %~dp0\sample-file.txt -b No-Such-Block-Begin -Q No-Such-Block-End -l Should return 0
:9: 

Run-Command144[31] = type example-commands.bat | lzmw -c -A  -it "^lzmw\s+(-c\s+)?" -L 3 -o "lzmw -c -A " -H 9
:3: lzmw -c -A -z "c:\Program Files\LLVM\bin\clang.exe" -t \\ -o \\
:4: lzmw -c -A -z "c:\Program Files\LLVM\bin\clang.exe" -t "\\\\" -o \\
:5: lzmw -c -A -z www.lz.text/temp.normal/samples/my.normal/my-stream.xml -x normal/ -t "(www.*)/([^/]+\.xml)\s*"
:7: lzmw -c -A -p %~dp0\sample-file.txt -b No-Such-Block-Begin -Q No-Such-Block-End  Should return 0
:8: lzmw -c -A -p %~dp0\sample-file.txt -b No-Such-Block-Begin -Q No-Such-Block-End -l Should return 0
:10: lzmw -c -A -p %~dp0\sample-file.txt -b No-Such-Begin -q No-Such-End Should return 0
:11: lzmw -c -A -p %~dp0\sample-file.txt -b No-Such-Begin -q No-Such-End -l Should return 0
:13: lzmw -c -A -p %~dp0\sample-file.txt -S -t "^(.+\S+)\s*$" -H 0         # Check return value, output nothing
:14: lzmw -c -A -p %~dp0\sample-file.txt -S -t "^(.+\S+)$" -H 0            # Check return value, output nothing

Run-Command144[32] = type example-commands.bat | lzmw -c -A  -x bat -o BAT -L 3 -H 5 -T 5      ## Plain text replacing to BAT , begin-row-3, and show top 5 and bottom 5 lines
:18: lzmw -c -p %~dp0 -f BAT -l -PAC -H 0
:19: lzmw -c -p %~dp0 -f BAT -l -PIC -H 0
:20: lzmw -c -p %~dp0 -l -f BAT -H -2 # Should skip top 2 items.
:21: lzmw -c -p %~dp0 -l -f BAT -T -2 # Should skip bottom 2 items.
:22: lzmw -c -p %~dp0 -l -f BAT -H -2 --sz # Should skip top 2 items.
:82: lzmw -c -p %~dp0\example-commands.BAT -ix update -t name -e Names
:93: lzmw -c -p %~dp0\example-commands.BAT -x " -B" -t ".*?(\d+\S+ \d+[\d:]+).*"
:97: lzmw -c -p %~dp0\example-commands.BAT -it "\w+" -H 0       ## Must NOT out any matched.
:98: lzmw -c -p %~dp0\example-commands.BAT -it "\w+" -T 0       ## Must NOT out any matched.
:99: lzmw -c -p %~dp0\example-commands.BAT -it just -U 3 -D 3

Run-Command144[33] = type example-commands.bat | lzmw -c -A  -t bat -o BAT -L 3 -H 5           ## Plain text replacing to BAT , begin-row-3, show top 5 lines
:18: lzmw -c -p %~dp0 -f BAT -l -PAC -H 0
:19: lzmw -c -p %~dp0 -f BAT -l -PIC -H 0
:20: lzmw -c -p %~dp0 -l -f BAT -H -2 # Should skip top 2 items.
:21: lzmw -c -p %~dp0 -l -f BAT -T -2 # Should skip bottom 2 items.
:22: lzmw -c -p %~dp0 -l -f BAT -H -2 --sz # Should skip top 2 items.

Run-Command144[34] = type example-commands.bat | lzmw -c -A  -t com -x bat -o BAT T -H 5       ## Use both Regex and plain text , replacing from
:42: lzmw -c -r -p %~dp0 -f "^(example-commands|sample-file)\.(txt|BAT)$" -l --sz --wt -T 3
:43: lzmw -c -r -p %~dp0 -f "^(example-commands|sample-file)\.(txt|BAT)$" -l --wt --sz -H 3 --dsc --s1 1KB --s2 1MB --w1 "2015-07-20 13:20"
:49: lzmw -c -p %~dp0\example-commands.BAT -it "class|run" -H 9
:50: lzmw -c -p %~dp0\example-commands.BAT -ie "class|run" -H 9
:51: lzmw -c -p %~dp0\example-commands.BAT -it "^lzmw\s+(-c\s+)?" -L 3 -o "lzmw -c " -H 9

Run-Command144[35] = type example-commands.bat | lzmw -c -A  -t t -L 9 -e txt -H 9             ## single char matching and coloring test
:10: lzmw -c -p %~dp0\sample-file.txt -b No-Such-Begin -q No-Such-End Should return 0
:11: lzmw -c -p %~dp0\sample-file.txt -b No-Such-Begin -q No-Such-End -l Should return 0
:13: lzmw -c -p %~dp0\sample-file.txt -S -t "^(.+\S+)\s*$" -H 0         # Check return value, output nothing
:14: lzmw -c -p %~dp0\sample-file.txt -S -t "^(.+\S+)$" -H 0            # Check return value, output nothing
:15: lzmw -c -p %~dp0\sample-file.txt -S -t "^(.+\S+)\n$" -H 0          # Check return value, output nothing
:16: lzmw -c -p %~dp0\sample-file.txt -S -t "^(.+\S+)\s*$" -o "$1" -R   # Remove tail new line
:17: lzmw -c -p %~dp0\sample-file.txt -S -t "^(.+\S+)\s*$" -o "$1\n" -R # Add a new line to tail
:18: lzmw -c -p %~dp0 -f bat -l -PAC -H 0
:19: lzmw -c -p %~dp0 -f bat -l -PIC -H 0

Run-Command144[36] = type example-commands.bat | lzmw -c -A  -x t -L 9 -e txt -H 9
:10: lzmw -c -p %~dp0\sample-file.txt -b No-Such-Begin -q No-Such-End Should return 0
:11: lzmw -c -p %~dp0\sample-file.txt -b No-Such-Begin -q No-Such-End -l Should return 0
:13: lzmw -c -p %~dp0\sample-file.txt -S -t "^(.+\S+)\s*$" -H 0         # Check return value, output nothing
:14: lzmw -c -p %~dp0\sample-file.txt -S -t "^(.+\S+)$" -H 0            # Check return value, output nothing
:15: lzmw -c -p %~dp0\sample-file.txt -S -t "^(.+\S+)\n$" -H 0          # Check return value, output nothing
:16: lzmw -c -p %~dp0\sample-file.txt -S -t "^(.+\S+)\s*$" -o "$1" -R   # Remove tail new line
:17: lzmw -c -p %~dp0\sample-file.txt -S -t "^(.+\S+)\s*$" -o "$1\n" -R # Add a new line to tail
:18: lzmw -c -p %~dp0 -f bat -l -PAC -H 0
:19: lzmw -c -p %~dp0 -f bat -l -PIC -H 0

Run-Command144[37] = type example-commands.bat | lzmw -c -A  -t t -L 9 -e me.txt -H 9       ## Coloring Regex-matched/Plain-found/Regex-enhance text meanwhile
:10: lzmw -c -p %~dp0\sample-file.txt -b No-Such-Begin -q No-Such-End Should return 0
:11: lzmw -c -p %~dp0\sample-file.txt -b No-Such-Begin -q No-Such-End -l Should return 0
:13: lzmw -c -p %~dp0\sample-file.txt -S -t "^(.+\S+)\s*$" -H 0         # Check return value, output nothing
:14: lzmw -c -p %~dp0\sample-file.txt -S -t "^(.+\S+)$" -H 0            # Check return value, output nothing
:15: lzmw -c -p %~dp0\sample-file.txt -S -t "^(.+\S+)\n$" -H 0          # Check return value, output nothing
:16: lzmw -c -p %~dp0\sample-file.txt -S -t "^(.+\S+)\s*$" -o "$1" -R   # Remove tail new line
:17: lzmw -c -p %~dp0\sample-file.txt -S -t "^(.+\S+)\s*$" -o "$1\n" -R # Add a new line to tail
:18: lzmw -c -p %~dp0 -f bat -l -PAC -H 0
:19: lzmw -c -p %~dp0 -f bat -l -PIC -H 0

Run-Command144[38] = type example-commands.bat | lzmw -c -A  -x t -L 9 -e me.txt -H 9
:10: lzmw -c -p %~dp0\sample-file.txt -b No-Such-Begin -q No-Such-End Should return 0
:11: lzmw -c -p %~dp0\sample-file.txt -b No-Such-Begin -q No-Such-End -l Should return 0
:13: lzmw -c -p %~dp0\sample-file.txt -S -t "^(.+\S+)\s*$" -H 0         # Check return value, output nothing
:14: lzmw -c -p %~dp0\sample-file.txt -S -t "^(.+\S+)$" -H 0            # Check return value, output nothing
:15: lzmw -c -p %~dp0\sample-file.txt -S -t "^(.+\S+)\n$" -H 0          # Check return value, output nothing
:16: lzmw -c -p %~dp0\sample-file.txt -S -t "^(.+\S+)\s*$" -o "$1" -R   # Remove tail new line
:17: lzmw -c -p %~dp0\sample-file.txt -S -t "^(.+\S+)\s*$" -o "$1\n" -R # Add a new line to tail
:18: lzmw -c -p %~dp0 -f bat -l -PAC -H 0
:19: lzmw -c -p %~dp0 -f bat -l -PIC -H 0

Run-Command144[39] = type example-commands.bat | lzmw -c -A  -x me -L 20 -H 9
:57: lzmw -c -p %~dp0\example-commands.bat -t t -L 9 -e me.txt -H 9       ## Coloring Regex-matched/Plain-found/Regex-enhance text meanwhile
:58: lzmw -c -p %~dp0\example-commands.bat -x t -L 9 -e me.txt -H 9
:59: lzmw -c -p %~dp0\example-commands.bat -x me -L 20 -H 9
:60: lzmw -c -p %~dp0\example-commands.bat -x me -L 20 -ie me -H 9
:61: lzmw -c -p %~dp0\example-commands.bat -t me -L 20 -ie me -H 9
:62: lzmw -c -p %~dp0\example-commands.bat -x me -o you -ie "you|txt|ping" -L 30 -H 9
:63: lzmw -c -p %~dp0\example-commands.bat -t me -o you -ie "you|txt|ping" -L 30 -H 9
:64: lzmw -c -p %~dp0\example-commands.bat -t me -ie "me|ping|\w+.txt" -L 30 -H 9
:65: lzmw -c -p %~dp0\example-commands.bat -x me -ie "me|ping|\w+.txt" -L 30 -H 9

Run-Command144[40] = type example-commands.bat | lzmw -c -A  -x me -L 20 -ie me -H 9
:57: lzmw -c -p %~dp0\example-commands.bat -t t -L 9 -e me.txt -H 9       ## Coloring Regex-matched/Plain-found/Regex-enhance text meanwhile
:58: lzmw -c -p %~dp0\example-commands.bat -x t -L 9 -e me.txt -H 9
:59: lzmw -c -p %~dp0\example-commands.bat -x me -L 20 -H 9
:60: lzmw -c -p %~dp0\example-commands.bat -x me -L 20 -ie me -H 9
:61: lzmw -c -p %~dp0\example-commands.bat -t me -L 20 -ie me -H 9
:62: lzmw -c -p %~dp0\example-commands.bat -x me -o you -ie "you|txt|ping" -L 30 -H 9
:63: lzmw -c -p %~dp0\example-commands.bat -t me -o you -ie "you|txt|ping" -L 30 -H 9
:64: lzmw -c -p %~dp0\example-commands.bat -t me -ie "me|ping|\w+.txt" -L 30 -H 9
:65: lzmw -c -p %~dp0\example-commands.bat -x me -ie "me|ping|\w+.txt" -L 30 -H 9

Run-Command144[41] = type example-commands.bat | lzmw -c -A  -t me -L 20 -ie me -H 9
:57: lzmw -c -p %~dp0\example-commands.bat -t t -L 9 -e me.txt -H 9       ## Coloring Regex-matched/Plain-found/Regex-enhance text meanwhile
:58: lzmw -c -p %~dp0\example-commands.bat -x t -L 9 -e me.txt -H 9
:59: lzmw -c -p %~dp0\example-commands.bat -x me -L 20 -H 9
:60: lzmw -c -p %~dp0\example-commands.bat -x me -L 20 -ie me -H 9
:61: lzmw -c -p %~dp0\example-commands.bat -t me -L 20 -ie me -H 9
:62: lzmw -c -p %~dp0\example-commands.bat -x me -o you -ie "you|txt|ping" -L 30 -H 9
:63: lzmw -c -p %~dp0\example-commands.bat -t me -o you -ie "you|txt|ping" -L 30 -H 9
:64: lzmw -c -p %~dp0\example-commands.bat -t me -ie "me|ping|\w+.txt" -L 30 -H 9
:65: lzmw -c -p %~dp0\example-commands.bat -x me -ie "me|ping|\w+.txt" -L 30 -H 9

Run-Command144[42] = type example-commands.bat | lzmw -c -A  -x me -o you -ie "you|txt|ping" -L 30 -H 9
:57: lzmw -c -p %~dp0\example-commands.bat -t t -L 9 -e you.txt -H 9       ## Coloring Regex-matched/Plain-found/Regex-enhance text youanwhile
:58: lzmw -c -p %~dp0\example-commands.bat -x t -L 9 -e you.txt -H 9
:59: lzmw -c -p %~dp0\example-commands.bat -x you -L 20 -H 9
:60: lzmw -c -p %~dp0\example-commands.bat -x you -L 20 -ie you -H 9
:61: lzmw -c -p %~dp0\example-commands.bat -t you -L 20 -ie you -H 9
:62: lzmw -c -p %~dp0\example-commands.bat -x you -o you -ie "you|txt|ping" -L 30 -H 9
:63: lzmw -c -p %~dp0\example-commands.bat -t you -o you -ie "you|txt|ping" -L 30 -H 9
:64: lzmw -c -p %~dp0\example-commands.bat -t you -ie "you|ping|\w+.txt" -L 30 -H 9
:65: lzmw -c -p %~dp0\example-commands.bat -x you -ie "you|ping|\w+.txt" -L 30 -H 9

Run-Command144[43] = type example-commands.bat | lzmw -c -A  -t me -o you -ie "you|txt|ping" -L 30 -H 9
:57: lzmw -c -p %~dp0\example-commands.bat -t t -L 9 -e you.txt -H 9       ## Coloring Regex-matched/Plain-found/Regex-enhance text youanwhile
:58: lzmw -c -p %~dp0\example-commands.bat -x t -L 9 -e you.txt -H 9
:59: lzmw -c -p %~dp0\example-commands.bat -x you -L 20 -H 9
:60: lzmw -c -p %~dp0\example-commands.bat -x you -L 20 -ie you -H 9
:61: lzmw -c -p %~dp0\example-commands.bat -t you -L 20 -ie you -H 9
:62: lzmw -c -p %~dp0\example-commands.bat -x you -o you -ie "you|txt|ping" -L 30 -H 9
:63: lzmw -c -p %~dp0\example-commands.bat -t you -o you -ie "you|txt|ping" -L 30 -H 9
:64: lzmw -c -p %~dp0\example-commands.bat -t you -ie "you|ping|\w+.txt" -L 30 -H 9
:65: lzmw -c -p %~dp0\example-commands.bat -x you -ie "you|ping|\w+.txt" -L 30 -H 9

Run-Command144[44] = type example-commands.bat | lzmw -c -A  -t me -ie "me|ping|\w+.txt" -L 30 -H 9
:57: lzmw -c -p %~dp0\example-commands.bat -t t -L 9 -e me.txt -H 9       ## Coloring Regex-matched/Plain-found/Regex-enhance text meanwhile
:58: lzmw -c -p %~dp0\example-commands.bat -x t -L 9 -e me.txt -H 9
:59: lzmw -c -p %~dp0\example-commands.bat -x me -L 20 -H 9
:60: lzmw -c -p %~dp0\example-commands.bat -x me -L 20 -ie me -H 9
:61: lzmw -c -p %~dp0\example-commands.bat -t me -L 20 -ie me -H 9
:62: lzmw -c -p %~dp0\example-commands.bat -x me -o you -ie "you|txt|ping" -L 30 -H 9
:63: lzmw -c -p %~dp0\example-commands.bat -t me -o you -ie "you|txt|ping" -L 30 -H 9
:64: lzmw -c -p %~dp0\example-commands.bat -t me -ie "me|ping|\w+.txt" -L 30 -H 9
:65: lzmw -c -p %~dp0\example-commands.bat -x me -ie "me|ping|\w+.txt" -L 30 -H 9

Run-Command144[45] = type example-commands.bat | lzmw -c -A  -x me -ie "me|ping|\w+.txt" -L 30 -H 9
:57: lzmw -c -p %~dp0\example-commands.bat -t t -L 9 -e me.txt -H 9       ## Coloring Regex-matched/Plain-found/Regex-enhance text meanwhile
:58: lzmw -c -p %~dp0\example-commands.bat -x t -L 9 -e me.txt -H 9
:59: lzmw -c -p %~dp0\example-commands.bat -x me -L 20 -H 9
:60: lzmw -c -p %~dp0\example-commands.bat -x me -L 20 -ie me -H 9
:61: lzmw -c -p %~dp0\example-commands.bat -t me -L 20 -ie me -H 9
:62: lzmw -c -p %~dp0\example-commands.bat -x me -o you -ie "you|txt|ping" -L 30 -H 9
:63: lzmw -c -p %~dp0\example-commands.bat -t me -o you -ie "you|txt|ping" -L 30 -H 9
:64: lzmw -c -p %~dp0\example-commands.bat -t me -ie "me|ping|\w+.txt" -L 30 -H 9
:65: lzmw -c -p %~dp0\example-commands.bat -x me -ie "me|ping|\w+.txt" -L 30 -H 9

Run-Command144[46] = type example-commands.bat | lzmw -c -A  -x name -o NAME -ie "name|come" -U 3 -D 3 -L 16 -H 9
:63: lzmw -c -p %~dp0\example-commands.bat -t me -o you -ie "you|txt|ping" -L 30 -H 9
:64: lzmw -c -p %~dp0\example-commands.bat -t me -ie "me|ping|\w+.txt" -L 30 -H 9
:65: lzmw -c -p %~dp0\example-commands.bat -x me -ie "me|ping|\w+.txt" -L 30 -H 9
:66: lzmw -c -p %~dp0\example-commands.bat -x NAME -o NAME -ie "NAME|come" -U 3 -D 3 -L 16 -H 9
:67: lzmw -c -p %~dp0\example-commands.bat -t NAME -o NAME -ie NAMEs -H 9
:68: lzmw -c -p %~dp0\example-commands.bat -t NAME -o NAME -T 1 -C
:69: lzmw -c -p %~dp0\example-commands.bat -it NAME -l
:70: lzmw -c -p %~dp0\sample-file.txt -it NAME -l
:71: lzmw -c -p %~dp0\example-commands.bat -t NAME -a -o NAME -ie NAMEs -b "come|NAME\w*" -Q "mailTo|Tag" -T 9

Run-Command144[47] = type example-commands.bat | lzmw -c -A  -t name -o NAME -ie Names -H 9
:66: lzmw -c -p %~dp0\example-commands.bat -x NAME -o NAME -ie "NAME|come" -U 3 -D 3 -L 16 -H 9
:67: lzmw -c -p %~dp0\example-commands.bat -t NAME -o NAME -ie NAMEs -H 9
:68: lzmw -c -p %~dp0\example-commands.bat -t NAME -o NAME -T 1 -C
:69: lzmw -c -p %~dp0\example-commands.bat -it NAME -l
:70: lzmw -c -p %~dp0\sample-file.txt -it NAME -l
:71: lzmw -c -p %~dp0\example-commands.bat -t NAME -a -o NAME -ie NAMEs -b "come|NAME\w*" -Q "mailTo|Tag" -T 9
:73: lzmw -c -p %~dp0\example-commands.bat -x NAME -o NAME -ie "NAME|come" -T 3
:74: lzmw -c -p %~dp0\example-commands.bat -t NAME -o come -ie "NAME|come" -a -L 19 -H 9
:75: lzmw -c -p %~dp0\example-commands.bat -t NAME -a -o NAM -ie "NAME|come" -L 19 -H 9

Run-Command144[48] = type example-commands.bat | lzmw -c -A  -t name -o NAME -T 1 -C
:217: lzmw -c -p Node1.tmp -PA -e ".All.|4000|8000"  ## This is an expanded xml that has replaced NAME value settings.

Run-Command144[49] = type example-commands.bat | lzmw -c -A  -it name -l

Run-Command144[50] = type sample-file.txt | lzmw -c -A  -it name -l

Run-Command144[51] = type example-commands.bat | lzmw -c -A  -t name -a -o NAME -ie Names -b "come|name\w*" -Q "mailTo|Tag" -T 9
:123: lzmw -c -p %~dp0\sample-file.txt -b "^\s*\[" -Q "^\s*\[" -t key -a
:124: lzmw -c -p %~dp0\sample-file.txt -b "^\s*\[" -Q "^\s*\[" -t key -a -y
:125: lzmw -c -p %~dp0\sample-file.txt -b "^\s*\[" -Q "^\s*\[" -a
:126: lzmw -c -p %~dp0\sample-file.txt -b "^\s*\[" -Q "^\s*\[|^\s*$" -a -y
:127: lzmw -c -p %~dp0\sample-file.txt -b "^\s*\[" -Q "^\s*\[|^\s*$" -a
:128: lzmw -c -p %~dp0\sample-file.txt -b "^\s*\[" -Q "^\s*\[|^\s*$" -a -y
:129: lzmw -c -p %~dp0\sample-file.txt -b "^\s*<Tag" -Q "^\s*</Tag" --nt Node3 -a
:214: lzmw -c -p %~dp0\sample-file.txt -b "<Tag NAME.*?Node1.*?>" -Q "</Tag>" -PA -e "#\S+?#"
:215: lzmw -c -p %~dp0\sample-file.txt -b "<Tag NAME.*?Node1.*?>" -Q "</Tag>" -PIC > Node1.tmp

Run-Command144[52] = type example-commands.bat | lzmw -c -A  -it NOT -U 2 -e "SRC|DIR" -H 5
:11: lzmw -c -p %~dp0\sample-file.txt -b No-Such-Begin -q No-Such-End -l Should return 0
:12: 
:13: lzmw -c -p %~dp0\sample-file.txt -S -t "^(.+\S+)\s*$" -H 0         # Check return value, output nothing
:14: lzmw -c -p %~dp0\sample-file.txt -S -t "^(.+\S+)$" -H 0            # Check return value, output nothing
:15: lzmw -c -p %~dp0\sample-file.txt -S -t "^(.+\S+)\n$" -H 0          # Check return value, output nothing

Run-Command144[53] = type example-commands.bat | lzmw -c -A  -x name -o NAME -ie "name|come" -T 3
:215: lzmw -c -p %~dp0\sample-file.txt -b "<Tag NAME.*?Node1.*?>" -Q "</Tag>" -PIC > Node1.tmp
:216: (lzmw -c -p %~dp0\sample-file.txt -it "<NAME>(#.+?#)</NAME>\s*<value>(.+?)</value>" -S -o "lzmw -x \"$1\" -o \"$2\""  -PAC | lzmw -t "^\s*(lzmw -x .*)" -o "$1 -p Node1.tmp -R -H 0" -PAC) |lzmw -XI -c Automatic extract macro and replace to real values.
:217: lzmw -c -p Node1.tmp -PA -e ".All.|4000|8000"  ## This is an expanded xml that has replaced NAME value settings.

Run-Command144[54] = type example-commands.bat | lzmw -c -A  -t name -o come -ie "name|come" -a -L 19 -H 9
:19: lzmw -c -p %~dp0 -f bat -l -PIC -H 0
:20: lzmw -c -p %~dp0 -l -f bat -H -2 # Should skip top 2 items.
:21: lzmw -c -p %~dp0 -l -f bat -T -2 # Should skip bottom 2 items.
:22: lzmw -c -p %~dp0 -l -f bat -H -2 --sz # Should skip top 2 items.
:23: lzmw -c -p %~dp0 -l -f bat -T -2 --wt # Should skip bottom 2 items.
:24: lzmw -c -p %~dp0 -l -f bat -H 2 --wt # Should show top 2 items.
:25: lzmw -c -p %~dp0 -l -f bat -T 2 # Should show bottom 2 items.
:26: lzmw -c -p %~dp0\sample-file.txt -L 7 -N 9 -t Not -U 2 -D 2
:27: lzmw -c -p %~dp0\sample-file.txt -it node --nt "node\d+"

Run-Command144[55] = type example-commands.bat | lzmw -c -A  -t name -a -o NAM -ie "name|come" -L 19 -H 9
:19: lzmw -c -p %~dp0 -f bat -l -PIC -H 0
:20: lzmw -c -p %~dp0 -l -f bat -H -2 # Should skip top 2 items.
:21: lzmw -c -p %~dp0 -l -f bat -T -2 # Should skip bottom 2 items.
:22: lzmw -c -p %~dp0 -l -f bat -H -2 --sz # Should skip top 2 items.
:23: lzmw -c -p %~dp0 -l -f bat -T -2 --wt # Should skip bottom 2 items.
:24: lzmw -c -p %~dp0 -l -f bat -H 2 --wt # Should show top 2 items.
:25: lzmw -c -p %~dp0 -l -f bat -T 2 # Should show bottom 2 items.
:26: lzmw -c -p %~dp0\sample-file.txt -L 7 -N 9 -t Not -U 2 -D 2
:27: lzmw -c -p %~dp0\sample-file.txt -it node --nt "node\d+"

Run-Command144[56] = type example-commands.bat | lzmw -c -A  -x name -o NAME -ie "name|come" -t not -U 3 -D 3
:73: lzmw -c -p %~dp0\example-commands.bat -x name -o NAME -ie "name|come" -T 3
:74: lzmw -c -p %~dp0\example-commands.bat -t name -o come -ie "name|come" -a -L 19 -H 9
:75: lzmw -c -p %~dp0\example-commands.bat -t name -a -o NAM -ie "name|come" -L 19 -H 9
:76: lzmw -c -p %~dp0\example-commands.bat -x NAME -o NAME -ie "NAME|come" -t not -U 3 -D 3
:77: lzmw -c -p %~dp0\sample-file.txt -ib "<Tag Name.*?\b(Node1|Node2)\b" -Q "<MailAddress>|</Tag>" -e "MailTo" -t body -o BODY -a
:78: lzmw -c -p %~dp0\sample-file.txt -ib "<Tag Name.*?\b(Node2)\b" -Q "<MailAddress>|</Tag>" -e MailTo -t body -o BODY -a
:79: lzmw -c -p %~dp0\sample-file.txt -ib "<Tag Name.*?\b(\w+)\b" -Q "<MailAddress>|</Tag>" -t Node1 -e "<.?Tag.*?>" -a

Run-Command144[57] = type sample-file.txt | lzmw -c -A  -ib "<Tag Name.*?\b(Node1|Node2)\b" -Q "<MailAddress>|</Tag>" -e "MailTo" -t body -o BODY -a
:47: <Tag Name="Node1">
:48:   <as::item ref="NodeCitOnly" />
:49:   <as::item ref="Node1Config" />
:50:   <MailTo>Alex@abc.com</MailTo>
:51:   <as::item ref="Node1BODY">
:52:     <as::pairs>
:53:       <as::pair name="MailTo">Bob@abc.com</as::pair>
:54:       <as::pair name="Function">#FUNCTION#</as::pair>
:55:       <as::pair name="Interval">#THRESHOLD_1#</as::pair>
:56:       <as::pair name="Switch">#THRESHOLD_2#</as::pair>
:57:     </as::pairs>
:58:   </as::item>
:59: </Tag>
:61: <Tag Name="Node2">
:62:   <as::item ref="NodeCitOnly" />
:63:   <as::item ref="Node2Config" />
:64: 
:65:   <MailTo>Bob@abc.com</MailTo>
:66:   <SubArgs />
:67:   <Subject>Node 2 title in BODY for test</Subject>
:68:   <Hosts>
:69:     <HBrgetHost>HB</HBrgetHost>
:70:     <Type>BBB</Type>
:71:   </Hosts>
:72: </Tag>

Run-Command144[58] = type sample-file.txt | lzmw -c -A  -ib "<Tag Name.*?\b(Node2)\b" -Q "<MailAddress>|</Tag>" -e MailTo -t body -o BODY -a
:61: <Tag Name="Node2">
:62:   <as::item ref="NodeCitOnly" />
:63:   <as::item ref="Node2Config" />
:64: 
:65:   <MailTo>Bob@abc.com</MailTo>
:66:   <SubArgs />
:67:   <Subject>Node 2 title in BODY for test</Subject>
:68:   <Hosts>
:69:     <HBrgetHost>HB</HBrgetHost>
:70:     <Type>BBB</Type>
:71:   </Hosts>
:72: </Tag>

Run-Command144[59] = type sample-file.txt | lzmw -c -A  -ib "<Tag Name.*?\b(\w+)\b" -Q "<MailAddress>|</Tag>" -t Node1 -e "<.?Tag.*?>" -a
:47: <Tag Name="Node1">
:48:   <as::item ref="NodeCitOnly" />
:49:   <as::item ref="Node1Config" />
:50:   <MailTo>Alex@abc.com</MailTo>
:51:   <as::item ref="Node1Body">
:52:     <as::pairs>
:53:       <as::pair name="MailTo">Bob@abc.com</as::pair>
:54:       <as::pair name="Function">#FUNCTION#</as::pair>
:55:       <as::pair name="Interval">#THRESHOLD_1#</as::pair>
:56:       <as::pair name="Switch">#THRESHOLD_2#</as::pair>
:57:     </as::pairs>
:58:   </as::item>
:59: </Tag>

Run-Command144[60] = type example-commands.bat | lzmw -c -A  -it name -o NAME -e Names -x update
:80: lzmw -c -p %~dp0\example-commands.bat -it NAME -o NAME -e NAMEs -x update
:82: lzmw -c -p %~dp0\example-commands.bat -ix update -t NAME -e NAMEs

Run-Command144[61] = type example-commands.bat | lzmw -c -A  -it name -e Names -x nameX
:81: lzmw -c -p %~dp0\example-commands.bat -it name -e Names -x nameX

Run-Command144[62] = type example-commands.bat | lzmw -c -A  -ix update -t name -e Names
:80: lzmw -c -p %~dp0\example-commands.bat -it name -o NAME -e Names -x update
:82: lzmw -c -p %~dp0\example-commands.bat -ix update -t name -e Names

Run-Command144[63] = type sample-file.txt | lzmw -c -A  -ib "<Tag name" -q "Switch" -Q "</Tag" -t MailTo -e Switch
:50:   <MailTo>Alex@abc.com</MailTo>
:53:       <as::pair name="MailTo">Bob@abc.com</as::pair>

Run-Command144[64] = type sample-file.txt | lzmw -c -A  -ib "<Tag name" -q "Switch" -Q "</Tag" -t MailTo -e Switch -a
:47: <Tag Name="Node1">
:48:   <as::item ref="NodeCitOnly" />
:49:   <as::item ref="Node1Config" />
:50:   <MailTo>Alex@abc.com</MailTo>
:51:   <as::item ref="Node1Body">
:52:     <as::pairs>
:53:       <as::pair name="MailTo">Bob@abc.com</as::pair>
:54:       <as::pair name="Function">#FUNCTION#</as::pair>
:55:       <as::pair name="Interval">#THRESHOLD_1#</as::pair>
:56:       <as::pair name="Switch">#THRESHOLD_2#</as::pair>

Run-Command144[65] = type sample-file.txt | lzmw -c -A  -it "<name>(#.+?)</name>\s*<value>(.+?)</value>" -S -o "lzmw -x \"$1\" -o \"$2\"" -L 14 -e "-x (\S+)|-o (\S+)|lzmw " -q "block"
:89: class DeferredRun {
public:
        DeferredRun(const std::function<void()>& run) : _run(run) { }
        ~DeferredRun() {
                _run();
        }
private:
        const std::function<void()> _run;
};

int main(int argc, char* argv[])
{
        auto hFile = OpenHandle(argv[1]);

        DeferredRun deferredRun([&]() {
                CloseHandle(hFile);
        });
}

<pair>
    lzmw -x "#FUNCTION#" -o "'All'"
</pair>
<pair>
    lzmw -x "#THRESHOLD_1#" -o "4000"
</pair>
<pair>
    lzmw -x "#THRESHOLD_2#" -o "8000"
</pair>


<Tag Name="Node1">
  <as::item ref="NodeCitOnly" />
  <as::item ref="Node1Config" />
  <MailTo>Alex@abc.com</MailTo>
  <as::item ref="Node1Body">
    <as::pairs>
      <as::pair name="MailTo">Bob@abc.com</as::pair>
      <as::pair name="Function">#FUNCTION#</as::pair>
      <as::pair name="Interval">#THRESHOLD_1#</as::pair>
      <as::pair name="Switch">#THRESHOLD_2#</as::pair>
    </as::pairs>
  </as::item>
</Tag>

<Tag Name="Node2">
  <as::item ref="NodeCitOnly" />
  <as::item ref="Node2Config" />

  <MailTo>Bob@abc.com</MailTo>
  <SubArgs />
  <Subject>Node 2 title in body for test</Subject>
  <Hosts>
    <HBrgetHost>HB</HBrgetHost>
    <Type>BBB</Type>
  </Hosts>
</Tag>

<Tag Name="Node3">
  <as::item ref="NodeCitOnly" />
  <as::item ref="Node3Config" />

  <MailTo>Clark@abc.com</MailTo>
  <AllowReTry>true</AllowReTry>
  <SubArgs>
    <SubArg>HBase</SubArg>
  </SubArgs>
  <Subject>Node3 title in body for test</Subject>
  <Hosts>
    <HBrgetHost>LZHOST</HBrgetHost>
  </Hosts>
</Tag>

--- arbitrary block to match replace  ----------

Run-Command144[66] = type sample-file.txt | lzmw -c -A  -it Tag -x ref -U 5 -D 5

Run-Command144[67] = type sample-file.txt | lzmw -c -A  -t "^(\d+-\d+-\d+)" -F "^(\d+-\d+-\d+ [\d:]+(\.\d+)?)" -B "2012-12-27 00:03"
:3: 2012-12-27 00:03:03.333 third  line time at 3
:4: 2012-12-27 00:04:04.444 forth  line time at 4
:5: 2012-12-27 00:05:05.555 fifth  line time at 5

Run-Command144[68] = type sample-file.txt | lzmw -c -A  -t "^(\d+-\d+-\d+)" -F "^(\d+-\d+-\d+ [\d:]+(\.\d+)?)" -E "2012-12-27 00:03"
:2: 2012-12-27 00:01:01.111 second line time at 1
:1: 2012-12-27 00:02:02.222 first  line time at 2

Run-Command144[69] = type sample-file.txt | lzmw -c -A  -t "^(\d+-\d+-\d+)" -F "^(\d+-\d+-\d+ [\d:]+(\.\d+)?)" -q "2012-12-27 00:03"
:2: 2012-12-27 00:01:01.111 second line time at 1
:1: 2012-12-27 00:02:02.222 first  line time at 2
:3: 2012-12-27 00:03:03.333 third  line time at 3

Run-Command144[70] = type sample-file.txt | lzmw -c -A  -t "^(\d+-\d+-\d+)" -F "^(\d+-\d+-\d+ [\d:]+(\.\d+)?)" -q "2012-12-27|03"
:1: 2012-12-27 00:02:02.222 first  line time at 2

Run-Command144[71] = type sample-file.txt | lzmw -c -A  -t "^(\d+-\d+-\d+)" -F "^(\d+-\d+-\d+ [\d:]+(\.\d+)?)" -B "2012-12-27 00:00" -E "2012-12-27 00:03"
:2: 2012-12-27 00:01:01.111 second line time at 1
:1: 2012-12-27 00:02:02.222 first  line time at 2

Run-Command144[72] = type sample-file.txt | lzmw -c -A  -F "^(\d+-\d+-\d+ [\d:]+(\.\d+)?)" -B "2012-12-27 00:00" -E "2012-12-27 00:03" -it first
:1: 2012-12-27 00:02:02.222 first  line time at 2

Run-Command144[73] = type example-commands.bat | lzmw -c -A  -x " -B" -t ".*?(\d+\S+ \d+[\d:]+).*"
:87: lzmw -c -p %~dp0\sample-file.txt -t "^(\d+-\d+-\d+)" -F "^(\d+-\d+-\d+ [\d:]+(\.\d+)?)" -B "2012-12-27 00:03"
:91: lzmw -c -p %~dp0\sample-file.txt -t "^(\d+-\d+-\d+)" -F "^(\d+-\d+-\d+ [\d:]+(\.\d+)?)" -B "2012-12-27 00:00" -E "2012-12-27 00:03"
:92: lzmw -c -p %~dp0\sample-file.txt -F "^(\d+-\d+-\d+ [\d:]+(\.\d+)?)" -B "2012-12-27 00:00" -E "2012-12-27 00:03" -it first

Run-Command144[74] = type sample-file.txt | lzmw -c -A  -s "^(\d+-\d+-\d+ [\d:]+(\.\d+)?)" -it 2012
:2: 2012-12-27 00:01:01.111 second line time at 1
:1: 2012-12-27 00:02:02.222 first  line time at 2
:3: 2012-12-27 00:03:03.333 third  line time at 3
:4: 2012-12-27 00:04:04.444 forth  line time at 4
:5: 2012-12-27 00:05:05.555 fifth  line time at 5

Run-Command144[75] = type sample-file.txt | lzmw -c -A  -t "^((((((\d+\D\d+\D\d+[\D\s]*\d+:\d+:\d+))))))(\S*)" -s "^\d+\D\d+\D\d+[\D\s]*\d+:\d+:\d+" -e "\d+|(\w+)\s+line"
:2: 2012-12-27 00:01:01.111 second line time at 1
:1: 2012-12-27 00:02:02.222 first  line time at 2
:3: 2012-12-27 00:03:03.333 third  line time at 3
:4: 2012-12-27 00:04:04.444 forth  line time at 4
:5: 2012-12-27 00:05:05.555 fifth  line time at 5

Run-Command144[76] = type sample-file.txt | lzmw -c -A  -t "^((((((\d+\D\d+\D\d+[\D\s]*\d+:\d+:\d+))))))(\S*)" -s "^\d+\D\d+\D\d+[\D\s]*\d+:\d+:\d+" -e "\d+|(\w+)\s+line" --dsc
:5: 2012-12-27 00:05:05.555 fifth  line time at 5
:4: 2012-12-27 00:04:04.444 forth  line time at 4
:3: 2012-12-27 00:03:03.333 third  line time at 3
:1: 2012-12-27 00:02:02.222 first  line time at 2
:2: 2012-12-27 00:01:01.111 second line time at 1

Run-Command144[77] = type example-commands.bat | lzmw -c -A  -it "\w+" -H 0       ## Must NOT out any matched.

Run-Command144[78] = type example-commands.bat | lzmw -c -A  -it "\w+" -T 0       ## Must NOT out any matched.

Run-Command144[79] = type example-commands.bat | lzmw -c -A  -it just -U 3 -D 3
:1: ::Just run windows-test.bat which calls this file, or run this file directly, you will get a vivid sense of lzmw.
:2: lzmw -c -z "c:\Program Files\LLVM\bin\clang.exe" -x \ -o \\
:3: lzmw -c -z "c:\Program Files\LLVM\bin\clang.exe" -t \\ -o \\
:4: lzmw -c -z "c:\Program Files\LLVM\bin\clang.exe" -t "\\\\" -o \\
:96: lzmw -c -p %~dp0\sample-file.txt -t "^((((((\d+\D\d+\D\d+[\D\s]*\d+:\d+:\d+))))))(\S*)" -s "^\d+\D\d+\D\d+[\D\s]*\d+:\d+:\d+" -e "\d+|(\w+)\s+line" --dsc
:97: lzmw -c -p %~dp0\example-commands.bat -it "\w+" -H 0       ## Must NOT out any matched.
:98: lzmw -c -p %~dp0\example-commands.bat -it "\w+" -T 0       ## Must NOT out any matched.
:99: lzmw -c -p %~dp0\example-commands.bat -it just -U 3 -D 3
:100: lzmw -c -p %~dp0\sample-file.txt -it "\W(function)\W" -e "name=(\S+)"
:101: lzmw -c -p %~dp0\sample-file.txt -b "^\s*\[" -Q "^\s*\[|^\s*$" -N 92
:102: lzmw -c -p %~dp0\sample-file.txt -b "^\s*\[" -Q "^\s*\[|^\s*$" -N 93

Run-Command144[80] = type sample-file.txt | lzmw -c -A  -it "\W(function)\W" -e "name=(\S+)"
:16:         DeferredRun(const std::function<void()>& run) : _run(run) { }
:21:         const std::function<void()> _run;
:34:     <Name>#FUNCTION#</Name>
:54:       <as::pair name="Function">#FUNCTION#</as::pair>

Run-Command144[81] = type sample-file.txt | lzmw -c -A  -b "^\s*\[" -Q "^\s*\[|^\s*$" -N 92

Run-Command144[82] = type sample-file.txt | lzmw -c -A  -b "^\s*\[" -Q "^\s*\[|^\s*$" -N 93
:90: [section1]
:91: key1=value1
:92: key2=value2
:93: 

Run-Command144[83] = type sample-file.txt | lzmw -c -A  -b "^\s*\[" -Q "^\s*\[|^\s*$" -N 96
:90: [section1]
:91: key1=value1
:92: key2=value2
:93: 

Run-Command144[84] = type sample-file.txt | lzmw -c -A  -b "^\s*\[" -Q "^\s*\[|^\s*$" -N 97
:90: [section1]
:91: key1=value1
:92: key2=value2
:93: 
:94: [section2]
:95: key1=value1
:96: key=value
:97: 

Run-Command144[85] = type sample-file.txt | lzmw -c -A  -b "^\s*\[" -Q "^\s*\[|^\s*$" -N 100 -L 90
:90: [section1]
:91: key1=value1
:92: key2=value2
:93: 
:94: [section2]
:95: key1=value1
:96: key=value
:97: 
:98: [section3]
:99: key=value
:100: 

Run-Command144[86] = type sample-file.txt | lzmw -c -A  -b "^\s*\[" -Q "^\s*\[|^\s*$" -N 100 -L 91
:94: [section2]
:95: key1=value1
:96: key=value
:97: 
:98: [section3]
:99: key=value
:100: 

Run-Command144[87] = type sample-file.txt | lzmw -c -A  -b "^\s*\[" -Q "^\s*\[|^\s*$" -L 90 -N 99 -it key2 -a
:90: [section1]
:91: key1=value1
:92: key2=value2
:93: 

Run-Command144[88] = type sample-file.txt | lzmw -c -A  -b "^\s*\[" -Q "^\s*\[|^\s*$" -L 90 -N 100 -it key2 -a
:90: [section1]
:91: key1=value1
:92: key2=value2
:93: 

Run-Command144[89] = type sample-file.txt | lzmw -c -A  -b "^\s*\[" -Q "^\s*\[|^\s*$" -L 90 -N 100 -it key2 -a -o KEY
:90: [section1]
:91: key1=value1
:92: KEY=value2
:93: 

Run-Command144[90] = type sample-file.txt | lzmw -c -A  -b "^\s*\[" -Q "^\s*\[|^\s*$" -N 100
:90: [section1]
:91: key1=value1
:92: key2=value2
:93: 
:94: [section2]
:95: key1=value1
:96: key=value
:97: 
:98: [section3]
:99: key=value
:100: 

Run-Command144[91] = type sample-file.txt | lzmw -c -A  -b "^\s*\[" -Q "^\s*\[|^\s*$" -N 101
:90: [section1]
:91: key1=value1
:92: key2=value2
:93: 
:94: [section2]
:95: key1=value1
:96: key=value
:97: 
:98: [section3]
:99: key=value
:100: 

Run-Command144[92] = type sample-file.txt | lzmw -c -A  -b "^\s*\[" -Q "^\s*\[|^\s*$" -N 102
:90: [section1]
:91: key1=value1
:92: key2=value2
:93: 
:94: [section2]
:95: key1=value1
:96: key=value
:97: 
:98: [section3]
:99: key=value
:100: 
:101: [section4]
:102: 

Run-Command144[93] = type sample-file.txt | lzmw -c -A  -b "^\s*\[" -Q "^\s*\[|^\s*$" -L 103 -N 110
:103: [section5]
:104: key1=value1
:105: key2=value2
:106: [section6]

Run-Command144[94] = type sample-file.txt | lzmw -c -A  -b "^\s*\[" -Q "^\s*\[|^\s*$" -L 103 -N 111
:103: [section5]
:104: key1=value1
:105: key2=value2
:106: [section6]
:109: [section7]
:110: key=value
:111: [section8]

Run-Command144[95] = type sample-file.txt | lzmw -c -A  -b "^\s*\[" -Q "^\s*\[|^\s*$" -L 109
:109: [section7]
:110: key=value
:111: [section8]
:112: [section9]
:113: 

Run-Command144[96] = type sample-file.txt | lzmw -c -A  -b "^\s*\[" -Q "^\s*\[|^\s*$" -L 109 -N 111
:109: [section7]
:110: key=value
:111: [section8]

Run-Command144[97] = type sample-file.txt | lzmw -c -A  -b "^\s*\[" -Q "^\s*\[|^\s*$" -L 109 -N 112
:109: [section7]
:110: key=value
:111: [section8]

Run-Command144[98] = type sample-file.txt | lzmw -c -A  -b "^\s*\[" -Q "^\s*\[|^\s*$" -L 109 -N 113
:109: [section7]
:110: key=value
:111: [section8]
:112: [section9]
:113: 

Run-Command144[99] = type sample-file.txt | lzmw -c -A  -b "^\s*\[" -Q "^\s*\[|^\s*$" -L 111 -y
:111: [section8]
:112: [section9]
:113: 

Run-Command144[100] = type sample-file.txt | lzmw -c -A  -b "^\s*\[" -Q "^\s*\[|^\s*$" -L 111
:111: [section8]
:112: [section9]

Run-Command144[101] = type sample-file.txt | lzmw -c -A  -b "^\s*\[" -Q "^\s*\[" -L 111
:111: [section8]
:112: [section9]

Run-Command144[102] = type sample-file.txt | lzmw -c -A  -b "^\s*\[" -Q "^\s*\[" -t key
:91: key1=value1
:92: key2=value2
:99: key=value
:104: key1=value1
:105: key2=value2
:110: key=value

Run-Command144[103] = type sample-file.txt | lzmw -c -A  -b "^\s*\[" -Q "^\s*\[" -t key -a
:90: [section1]
:91: key1=value1
:92: key2=value2
:93: 
:94: [section2]
:98: [section3]
:99: key=value
:100: 
:101: [section4]
:103: [section5]
:104: key1=value1
:105: key2=value2
:106: [section6]
:109: [section7]
:110: key=value
:111: [section8]

Run-Command144[104] = type sample-file.txt | lzmw -c -A  -b "^\s*\[" -Q "^\s*\[" -t key -a -y
:90: [section1]
:91: key1=value1
:92: key2=value2
:93: 
:94: [section2]
:95: key1=value1
:96: key=value
:97: 
:98: [section3]
:99: key=value
:100: 
:103: [section5]
:104: key1=value1
:105: key2=value2
:106: [section6]
:107: key1=value1
:108: key2=value2
:109: [section7]
:110: key=value

Run-Command144[105] = type sample-file.txt | lzmw -c -A  -b "^\s*\[" -Q "^\s*\[" -a
:90: [section1]
:91: key1=value1
:92: key2=value2
:93: 
:94: [section2]
:98: [section3]
:99: key=value
:100: 
:101: [section4]
:103: [section5]
:104: key1=value1
:105: key2=value2
:106: [section6]
:109: [section7]
:110: key=value
:111: [section8]

Run-Command144[106] = type sample-file.txt | lzmw -c -A  -b "^\s*\[" -Q "^\s*\[|^\s*$" -a -y
:90: [section1]
:91: key1=value1
:92: key2=value2
:93: 
:94: [section2]
:95: key1=value1
:96: key=value
:97: 
:98: [section3]
:99: key=value
:100: 
:101: [section4]
:102: 
:103: [section5]
:104: key1=value1
:105: key2=value2
:106: [section6]
:107: key1=value1
:108: key2=value2
:109: [section7]
:110: key=value
:111: [section8]
:112: [section9]
:113: 

Run-Command144[107] = type sample-file.txt | lzmw -c -A  -b "^\s*\[" -Q "^\s*\[|^\s*$" -a
:90: [section1]
:91: key1=value1
:92: key2=value2
:93: 
:94: [section2]
:95: key1=value1
:96: key=value
:97: 
:98: [section3]
:99: key=value
:100: 
:101: [section4]
:102: 
:103: [section5]
:104: key1=value1
:105: key2=value2
:106: [section6]
:109: [section7]
:110: key=value
:111: [section8]
:112: [section9]
:113: 

Run-Command144[108] = type sample-file.txt | lzmw -c -A  -b "^\s*\[" -Q "^\s*\[|^\s*$" -a -y
:90: [section1]
:91: key1=value1
:92: key2=value2
:93: 
:94: [section2]
:95: key1=value1
:96: key=value
:97: 
:98: [section3]
:99: key=value
:100: 
:101: [section4]
:102: 
:103: [section5]
:104: key1=value1
:105: key2=value2
:106: [section6]
:107: key1=value1
:108: key2=value2
:109: [section7]
:110: key=value
:111: [section8]
:112: [section9]
:113: 

Run-Command144[109] = type sample-file.txt | lzmw -c -A  -b "^\s*<Tag" -Q "^\s*</Tag" --nt Node3 -a
:47: <Tag Name="Node1">
:48:   <as::item ref="NodeCitOnly" />
:49:   <as::item ref="Node1Config" />
:50:   <MailTo>Alex@abc.com</MailTo>
:51:   <as::item ref="Node1Body">
:52:     <as::pairs>
:53:       <as::pair name="MailTo">Bob@abc.com</as::pair>
:54:       <as::pair name="Function">#FUNCTION#</as::pair>
:55:       <as::pair name="Interval">#THRESHOLD_1#</as::pair>
:56:       <as::pair name="Switch">#THRESHOLD_2#</as::pair>
:57:     </as::pairs>
:58:   </as::item>
:59: </Tag>
:61: <Tag Name="Node2">
:62:   <as::item ref="NodeCitOnly" />
:63:   <as::item ref="Node2Config" />
:64: 
:65:   <MailTo>Bob@abc.com</MailTo>
:66:   <SubArgs />
:67:   <Subject>Node 2 title in body for test</Subject>
:68:   <Hosts>
:69:     <HBrgetHost>HB</HBrgetHost>
:70:     <Type>BBB</Type>
:71:   </Hosts>
:72: </Tag>

Run-Command144[110] = type sample-file.txt | lzmw -c -A  -b "^\s*<Tag" -Q "^\s*</Tag" -t title -o TITLE --nt Node3 -a
:61: <Tag Name="Node2">
:62:   <as::item ref="NodeCitOnly" />
:63:   <as::item ref="Node2Config" />
:64: 
:65:   <MailTo>Bob@abc.com</MailTo>
:66:   <SubArgs />
:67:   <Subject>Node 2 TITLE in body for test</Subject>
:68:   <Hosts>
:69:     <HBrgetHost>HB</HBrgetHost>
:70:     <Type>BBB</Type>
:71:   </Hosts>
:72: </Tag>

Run-Command144[111] = type sample-file.txt | lzmw -c -A  -b "^\s*<Tag" -Q "^\s*</Tag" -t title -o TITLE --nt Node3
:67:   <Subject>Node 2 TITLE in body for test</Subject>

Run-Command144[112] = type sample-file.txt | lzmw -c -A  -b "^\s*<Tag" -Q "^\s*</Tag" -t title -o TITLE --nt Node3 -y
:67:   <Subject>Node 2 TITLE in body for test</Subject>

Run-Command144[113] = type sample-file.txt | lzmw -c -A  -b "^\s*<Tag" -Q "^\s*</Tag" -t title -o TITLE --nt Node3 -y -a
:61: <Tag Name="Node2">
:62:   <as::item ref="NodeCitOnly" />
:63:   <as::item ref="Node2Config" />
:64: 
:65:   <MailTo>Bob@abc.com</MailTo>
:66:   <SubArgs />
:67:   <Subject>Node 2 TITLE in body for test</Subject>
:68:   <Hosts>
:69:     <HBrgetHost>HB</HBrgetHost>
:70:     <Type>BBB</Type>
:71:   </Hosts>
:72: </Tag>

Run-Command144[114] = type sample-file.txt | lzmw -c -A  -S -L 90 -N 100 -it "\s*\[section1.*?value2\s*" -o ""
:100: [section2]
key1=value1
key=value

[section3]
key=value


Run-Command144[115] = type sample-file.txt | lzmw -c -A  -S -it "\s*\[section1.*?value2" -o ""
:133: 2012-12-27 00:02:02.222 first  line time at 2
2012-12-27 00:01:01.111 second line time at 1
2012-12-27 00:03:03.333 third  line time at 3
2012-12-27 00:04:04.444 forth  line time at 4
2012-12-27 00:05:05.555 fifth  line time at 5

enum class LineType {
    NotMatchedLine = 0,
    MatchedLine = 1,
    UpLine = 2,
    DownLine = 3
};

class DeferredRun {
public:
        DeferredRun(const std::function<void()>& run) : _run(run) { }
        ~DeferredRun() {
                _run();
        }
private:
        const std::function<void()> _run;
};

int main(int argc, char* argv[])
{
        auto hFile = OpenHandle(argv[1]);

        DeferredRun deferredRun([&]() {
                CloseHandle(hFile);
        });
}

<pair>
    <Name>#FUNCTION#</Name>
    <Value>'All'</Value>
</pair>
<pair>
    <Name>#THRESHOLD_1#</Name>
    <Value>4000</Value>
</pair>
<pair>
    <Name>#THRESHOLD_2#</Name>
    <Value>8000</Value>
</pair>


<Tag Name="Node1">
  <as::item ref="NodeCitOnly" />
  <as::item ref="Node1Config" />
  <MailTo>Alex@abc.com</MailTo>
  <as::item ref="Node1Body">
    <as::pairs>
      <as::pair name="MailTo">Bob@abc.com</as::pair>
      <as::pair name="Function">#FUNCTION#</as::pair>
      <as::pair name="Interval">#THRESHOLD_1#</as::pair>
      <as::pair name="Switch">#THRESHOLD_2#</as::pair>
    </as::pairs>
  </as::item>
</Tag>

<Tag Name="Node2">
  <as::item ref="NodeCitOnly" />
  <as::item ref="Node2Config" />

  <MailTo>Bob@abc.com</MailTo>
  <SubArgs />
  <Subject>Node 2 title in body for test</Subject>
  <Hosts>
    <HBrgetHost>HB</HBrgetHost>
    <Type>BBB</Type>
  </Hosts>
</Tag>

<Tag Name="Node3">
  <as::item ref="NodeCitOnly" />
  <as::item ref="Node3Config" />

  <MailTo>Clark@abc.com</MailTo>
  <AllowReTry>true</AllowReTry>
  <SubArgs>
    <SubArg>HBase</SubArg>
  </SubArgs>
  <Subject>Node3 title in body for test</Subject>
  <Hosts>
    <HBrgetHost>LZHOST</HBrgetHost>
  </Hosts>
</Tag>

--- arbitrary block to match replace  ----------

[section2]
key1=value1
key=value

[section3]
key=value

[section4]

[section5]
key1=value1
key2=value2
[section6]
key1=value1
key2=value2
[section7]
key=value
[section8]
[section9]

--section1---------------
section 1 line 1
section 1 line 2
--section2---------------
second section line 1
second section line 2
--------------------section3
section 3 line 1
section 3 line 2
--------------------section4
section 4 line 1
--------------------section5
section 5 line 1
--------------------section6
line 6.1
--------------------section7
section 6 line 1
--------------------section8
--------------------section9
line 9.1

Run-Command144[116] = type sample-file.txt | lzmw -c -A  -S -it "\s*\[section1.*?(value2)" -o "$1" -L 88 -N 101
:101: 
--- arbitrary block to match replace  ----------value2

[section2]
key1=value1
key=value

[section3]
key=value

[section4]

Run-Command144[117] = type sample-file.txt | lzmw -c -A  -S -it "\[section1.*?(value2)" -o "$1" -L 88 -N 101
:101: 
--- arbitrary block to match replace  ----------
value2

[section2]
key1=value1
key=value

[section3]
key=value

[section4]

Run-Command144[118] = type sample-file.txt | lzmw -c -A  -S -it "\[section1.*?(value2)" -o "$1"  -b "arbitrary block" -N 101
:101: --- arbitrary block to match replace  ----------
value2

[section2]
key1=value1
key=value

[section3]
key=value

[section4]

Run-Command144[119] = type sample-file.txt | lzmw -c -A  -b "^\s*\[" -Q "^\s*\[|^\s*$" -S -it "^\s*\[section1.*" -o ""
:90: 

Run-Command144[120] = type sample-file.txt | lzmw -c -A  -b "^\s*\[" -Q "^\s*\[|^\s*$" -S -it "^\s*\[section1.*?value2" -o "value2"
:90: value2


Run-Command144[121] = type sample-file.txt | lzmw -c -A  -b "^\s*\[" -Q "^\s*\[|^\s*$" -S -it "\s*\[section1.*?value2" -o "value2"
:90: value2


Run-Command144[122] = type sample-file.txt | lzmw -c -A  -b "^\s*\[" -Q "^\s*\[|^\s*$" -S -it "^\s*\[section.*" -o ""
:90: 
:94: 
:98: 
:101: 
:103: 
:109: 
:112: 

Run-Command144[123] = type sample-file.txt | lzmw -c -A  -b "^\s*\[" -Q "^\s*\[|^\s*$" -S -it "^\s*\[section.*" -y
:90: [section1]
key1=value1
key2=value2

:94: [section2]
key1=value1
key=value

:98: [section3]
key=value

:101: [section4]

:103: [section5]
key1=value1
key2=value2
:106: [section6]
key1=value1
key2=value2
:109: [section7]
key=value
:111: [section8]
:112: [section9]


Run-Command144[124] = type sample-file.txt | lzmw -c -A  -b "^\s*\[" -Q "^\s*\[|^\s*$" -x section1 -S -it "^\s*\[section.*" -o ""
:90: 

Run-Command144[125] = type sample-file.txt | lzmw -c -A  -b "^\s*\[" -Q "^\s*\[|^\s*$" -L 90 -N 93 -S -it "\[section1.*?(value2)" -o "$1"
:90: value2


Run-Command144[126] = type sample-file.txt | lzmw -c -A  -b "^\s*\[" -Q "^\s*\[|^\s*$" -L 90 -N 93 -S -it "\[section1.*?(value2)\s*" -o "$1"
:90: value2

Run-Command144[127] = type sample-file.txt | lzmw -c -A  -b "^\s*\[" -Q "^\s*\[|^\s*$" -L 90 -N 100 -S -it "\[section1.*?(value2)" -o "$1"
:90: value2


Run-Command144[128] = type sample-file.txt | lzmw -c -A  -L 90 -N 93 -S -it "\[section1.*?(value2)" -o "$1"
:93: value2


Run-Command144[129] = type sample-file.txt | lzmw -c -A  -L 90 -N 100 -S -it "\[section1.*?(value2)" -o "$1"
:100: value2

[section2]
key1=value1
key=value

[section3]
key=value


Run-Command144[130] = type sample-file.txt | lzmw -c -A  -b "^\[" -Q "no-such-end" -t SECTION

Run-Command144[131] = type sample-file.txt | lzmw -c -A  -b "--section1" -Q "^---|^\s*$" -q "--section3" -t SEC -ya

Run-Command144[132] = type sample-file.txt | lzmw -c -A  -b "^\s*<Tag" -Q "^\s*</Tag" -t title -o TITLE --nt Node3
:67:   <Subject>Node 2 TITLE in body for test</Subject>

Run-Command144[133] = type sample-file.txt | lzmw -c -A  -b "^\s*\[" -Q "^\s*\[|^\s*$" -S -it "^\s*\[section1.*"
:90: [section1]
key1=value1
key2=value2


Run-Command144[134] = type sample-file.txt | lzmw -c -A  -S -L 90 -N 100 -it "\s*\[section1.*?value2\s*" -o ""
:100: [section2]
key1=value1
key=value

[section3]
key=value


Run-Command144[135] = type sample-file.txt | lzmw -c -A  -b "^\s*\[" -Q "^\s*\[|^\s*$" -S -it "^\s*\[section1.*" -o ""
:90: 

Run-Command144[136] = type sample-file.txt | lzmw -c -A  -b "^\s*\[" -Q "^\s*\[|^\s*$" -S -it "^\s*\[section.*" -o ""
:90: 
:94: 
:98: 
:101: 
:103: 
:109: 
:112: 

Run-Command144[137] = type sample-file.txt | lzmw -c -A  -S -it "\s*\[section1.*?value2" -o ""
:133: 2012-12-27 00:02:02.222 first  line time at 2
2012-12-27 00:01:01.111 second line time at 1
2012-12-27 00:03:03.333 third  line time at 3
2012-12-27 00:04:04.444 forth  line time at 4
2012-12-27 00:05:05.555 fifth  line time at 5

enum class LineType {
    NotMatchedLine = 0,
    MatchedLine = 1,
    UpLine = 2,
    DownLine = 3
};

class DeferredRun {
public:
        DeferredRun(const std::function<void()>& run) : _run(run) { }
        ~DeferredRun() {
                _run();
        }
private:
        const std::function<void()> _run;
};

int main(int argc, char* argv[])
{
        auto hFile = OpenHandle(argv[1]);

        DeferredRun deferredRun([&]() {
                CloseHandle(hFile);
        });
}

<pair>
    <Name>#FUNCTION#</Name>
    <Value>'All'</Value>
</pair>
<pair>
    <Name>#THRESHOLD_1#</Name>
    <Value>4000</Value>
</pair>
<pair>
    <Name>#THRESHOLD_2#</Name>
    <Value>8000</Value>
</pair>


<Tag Name="Node1">
  <as::item ref="NodeCitOnly" />
  <as::item ref="Node1Config" />
  <MailTo>Alex@abc.com</MailTo>
  <as::item ref="Node1Body">
    <as::pairs>
      <as::pair name="MailTo">Bob@abc.com</as::pair>
      <as::pair name="Function">#FUNCTION#</as::pair>
      <as::pair name="Interval">#THRESHOLD_1#</as::pair>
      <as::pair name="Switch">#THRESHOLD_2#</as::pair>
    </as::pairs>
  </as::item>
</Tag>

<Tag Name="Node2">
  <as::item ref="NodeCitOnly" />
  <as::item ref="Node2Config" />

  <MailTo>Bob@abc.com</MailTo>
  <SubArgs />
  <Subject>Node 2 title in body for test</Subject>
  <Hosts>
    <HBrgetHost>HB</HBrgetHost>
    <Type>BBB</Type>
  </Hosts>
</Tag>

<Tag Name="Node3">
  <as::item ref="NodeCitOnly" />
  <as::item ref="Node3Config" />

  <MailTo>Clark@abc.com</MailTo>
  <AllowReTry>true</AllowReTry>
  <SubArgs>
    <SubArg>HBase</SubArg>
  </SubArgs>
  <Subject>Node3 title in body for test</Subject>
  <Hosts>
    <HBrgetHost>LZHOST</HBrgetHost>
  </Hosts>
</Tag>

--- arbitrary block to match replace  ----------

[section2]
key1=value1
key=value

[section3]
key=value

[section4]

[section5]
key1=value1
key2=value2
[section6]
key1=value1
key2=value2
[section7]
key=value
[section8]
[section9]

--section1---------------
section 1 line 1
section 1 line 2
--section2---------------
second section line 1
second section line 2
--------------------section3
section 3 line 1
section 3 line 2
--------------------section4
section 4 line 1
--------------------section5
section 5 line 1
--------------------section6
line 6.1
--------------------section7
section 6 line 1
--------------------section8
--------------------section9
line 9.1

Run-Command144[138] = type sample-file.txt | lzmw -c -A  -b "^\s*\[" -Q "^\s*\[|^\s*$" -S -it "^\s*\[section.*" -o ""
:90: 
:94: 
:98: 
:101: 
:103: 
:109: 
:112: 

Run-Command144[139] = type sample-file.txt | lzmw -c -A  -b "^\s*\[" -Q "^\s*\[|^\s*$" -S -it "^\s*\[section.*" -o ""
:90: 
:94: 
:98: 
:101: 
:103: 
:109: 
:112: 

Run-Command144[140] = type sample-file.txt | lzmw -c -A  -b "^\s*\[" -Q "^\s*\[|^\s*$" -S -it "^\s*\[section.*" -o "" -y
:90: 
:94: 
:98: 
:101: 
:103: 
:106: 
:109: 
:111: 
:112: 

Run-Command144[141] = type sample-file.txt | lzmw -c -A  -b "^\s*\[" -Q "^\s*\[|^\s*$" -S -it "^\s*\[section.*" -o "" -y
:90: 
:94: 
:98: 
:101: 
:103: 
:106: 
:109: 
:111: 
:112: 

Run-Command144[142] = type sample-file.txt | lzmw -c -A  -b "^\s*\[" -Q "^\s*\[|^\s*$" -x section1 -S -it "^\s*\[section.*" -o ""
:90: 

Run-Command144[143] = type sample-file.txt | lzmw -c -A  -t "\b(NotMatchedLine|MatchedLine|UpLine|DownLine)" -o "LineType::$1" --nt "=\s*\d+"

Run-Command144[144] = type sample-file.txt | lzmw -c -A  -t "\b(NotMatchedLine|MatchedLine|UpLine|DownLine)" -o "LineType::$1"
:8:     LineType::NotMatchedLine = 0,
:9:     LineType::MatchedLine = 1,
:10:     LineType::UpLine = 2,
:11:     LineType::DownLine = 3

